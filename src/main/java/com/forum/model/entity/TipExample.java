package com.forum.model.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TipExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    public TipExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andTipidIsNull() {
            addCriterion("tipid is null");
            return (Criteria) this;
        }

        public Criteria andTipidIsNotNull() {
            addCriterion("tipid is not null");
            return (Criteria) this;
        }

        public Criteria andTipidEqualTo(Integer value) {
            addCriterion("tipid =", value, "tipid");
            return (Criteria) this;
        }

        public Criteria andTipidNotEqualTo(Integer value) {
            addCriterion("tipid <>", value, "tipid");
            return (Criteria) this;
        }

        public Criteria andTipidGreaterThan(Integer value) {
            addCriterion("tipid >", value, "tipid");
            return (Criteria) this;
        }

        public Criteria andTipidGreaterThanOrEqualTo(Integer value) {
            addCriterion("tipid >=", value, "tipid");
            return (Criteria) this;
        }

        public Criteria andTipidLessThan(Integer value) {
            addCriterion("tipid <", value, "tipid");
            return (Criteria) this;
        }

        public Criteria andTipidLessThanOrEqualTo(Integer value) {
            addCriterion("tipid <=", value, "tipid");
            return (Criteria) this;
        }

        public Criteria andTipidIn(List<Integer> values) {
            addCriterion("tipid in", values, "tipid");
            return (Criteria) this;
        }

        public Criteria andTipidNotIn(List<Integer> values) {
            addCriterion("tipid not in", values, "tipid");
            return (Criteria) this;
        }

        public Criteria andTipidBetween(Integer value1, Integer value2) {
            addCriterion("tipid between", value1, value2, "tipid");
            return (Criteria) this;
        }

        public Criteria andTipidNotBetween(Integer value1, Integer value2) {
            addCriterion("tipid not between", value1, value2, "tipid");
            return (Criteria) this;
        }

        public Criteria andTipuseridIsNull() {
            addCriterion("tipuserid is null");
            return (Criteria) this;
        }

        public Criteria andTipuseridIsNotNull() {
            addCriterion("tipuserid is not null");
            return (Criteria) this;
        }

        public Criteria andTipuseridEqualTo(Integer value) {
            addCriterion("tipuserid =", value, "tipuserid");
            return (Criteria) this;
        }

        public Criteria andTipuseridNotEqualTo(Integer value) {
            addCriterion("tipuserid <>", value, "tipuserid");
            return (Criteria) this;
        }

        public Criteria andTipuseridGreaterThan(Integer value) {
            addCriterion("tipuserid >", value, "tipuserid");
            return (Criteria) this;
        }

        public Criteria andTipuseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("tipuserid >=", value, "tipuserid");
            return (Criteria) this;
        }

        public Criteria andTipuseridLessThan(Integer value) {
            addCriterion("tipuserid <", value, "tipuserid");
            return (Criteria) this;
        }

        public Criteria andTipuseridLessThanOrEqualTo(Integer value) {
            addCriterion("tipuserid <=", value, "tipuserid");
            return (Criteria) this;
        }

        public Criteria andTipuseridIn(List<Integer> values) {
            addCriterion("tipuserid in", values, "tipuserid");
            return (Criteria) this;
        }

        public Criteria andTipuseridNotIn(List<Integer> values) {
            addCriterion("tipuserid not in", values, "tipuserid");
            return (Criteria) this;
        }

        public Criteria andTipuseridBetween(Integer value1, Integer value2) {
            addCriterion("tipuserid between", value1, value2, "tipuserid");
            return (Criteria) this;
        }

        public Criteria andTipuseridNotBetween(Integer value1, Integer value2) {
            addCriterion("tipuserid not between", value1, value2, "tipuserid");
            return (Criteria) this;
        }

        public Criteria andTipcountIsNull() {
            addCriterion("tipcount is null");
            return (Criteria) this;
        }

        public Criteria andTipcountIsNotNull() {
            addCriterion("tipcount is not null");
            return (Criteria) this;
        }

        public Criteria andTipcountEqualTo(Integer value) {
            addCriterion("tipcount =", value, "tipcount");
            return (Criteria) this;
        }

        public Criteria andTipcountNotEqualTo(Integer value) {
            addCriterion("tipcount <>", value, "tipcount");
            return (Criteria) this;
        }

        public Criteria andTipcountGreaterThan(Integer value) {
            addCriterion("tipcount >", value, "tipcount");
            return (Criteria) this;
        }

        public Criteria andTipcountGreaterThanOrEqualTo(Integer value) {
            addCriterion("tipcount >=", value, "tipcount");
            return (Criteria) this;
        }

        public Criteria andTipcountLessThan(Integer value) {
            addCriterion("tipcount <", value, "tipcount");
            return (Criteria) this;
        }

        public Criteria andTipcountLessThanOrEqualTo(Integer value) {
            addCriterion("tipcount <=", value, "tipcount");
            return (Criteria) this;
        }

        public Criteria andTipcountIn(List<Integer> values) {
            addCriterion("tipcount in", values, "tipcount");
            return (Criteria) this;
        }

        public Criteria andTipcountNotIn(List<Integer> values) {
            addCriterion("tipcount not in", values, "tipcount");
            return (Criteria) this;
        }

        public Criteria andTipcountBetween(Integer value1, Integer value2) {
            addCriterion("tipcount between", value1, value2, "tipcount");
            return (Criteria) this;
        }

        public Criteria andTipcountNotBetween(Integer value1, Integer value2) {
            addCriterion("tipcount not between", value1, value2, "tipcount");
            return (Criteria) this;
        }

        public Criteria andTiptopicIsNull() {
            addCriterion("tiptopic is null");
            return (Criteria) this;
        }

        public Criteria andTiptopicIsNotNull() {
            addCriterion("tiptopic is not null");
            return (Criteria) this;
        }

        public Criteria andTiptopicEqualTo(String value) {
            addCriterion("tiptopic =", value, "tiptopic");
            return (Criteria) this;
        }

        public Criteria andTiptopicNotEqualTo(String value) {
            addCriterion("tiptopic <>", value, "tiptopic");
            return (Criteria) this;
        }

        public Criteria andTiptopicGreaterThan(String value) {
            addCriterion("tiptopic >", value, "tiptopic");
            return (Criteria) this;
        }

        public Criteria andTiptopicGreaterThanOrEqualTo(String value) {
            addCriterion("tiptopic >=", value, "tiptopic");
            return (Criteria) this;
        }

        public Criteria andTiptopicLessThan(String value) {
            addCriterion("tiptopic <", value, "tiptopic");
            return (Criteria) this;
        }

        public Criteria andTiptopicLessThanOrEqualTo(String value) {
            addCriterion("tiptopic <=", value, "tiptopic");
            return (Criteria) this;
        }

        public Criteria andTiptopicLike(String value) {
            addCriterion("tiptopic like", value, "tiptopic");
            return (Criteria) this;
        }

        public Criteria andTiptopicNotLike(String value) {
            addCriterion("tiptopic not like", value, "tiptopic");
            return (Criteria) this;
        }

        public Criteria andTiptopicIn(List<String> values) {
            addCriterion("tiptopic in", values, "tiptopic");
            return (Criteria) this;
        }

        public Criteria andTiptopicNotIn(List<String> values) {
            addCriterion("tiptopic not in", values, "tiptopic");
            return (Criteria) this;
        }

        public Criteria andTiptopicBetween(String value1, String value2) {
            addCriterion("tiptopic between", value1, value2, "tiptopic");
            return (Criteria) this;
        }

        public Criteria andTiptopicNotBetween(String value1, String value2) {
            addCriterion("tiptopic not between", value1, value2, "tiptopic");
            return (Criteria) this;
        }

        public Criteria andTipcontentIsNull() {
            addCriterion("tipcontent is null");
            return (Criteria) this;
        }

        public Criteria andTipcontentIsNotNull() {
            addCriterion("tipcontent is not null");
            return (Criteria) this;
        }

        public Criteria andTipcontentEqualTo(String value) {
            addCriterion("tipcontent =", value, "tipcontent");
            return (Criteria) this;
        }

        public Criteria andTipcontentNotEqualTo(String value) {
            addCriterion("tipcontent <>", value, "tipcontent");
            return (Criteria) this;
        }

        public Criteria andTipcontentGreaterThan(String value) {
            addCriterion("tipcontent >", value, "tipcontent");
            return (Criteria) this;
        }

        public Criteria andTipcontentGreaterThanOrEqualTo(String value) {
            addCriterion("tipcontent >=", value, "tipcontent");
            return (Criteria) this;
        }

        public Criteria andTipcontentLessThan(String value) {
            addCriterion("tipcontent <", value, "tipcontent");
            return (Criteria) this;
        }

        public Criteria andTipcontentLessThanOrEqualTo(String value) {
            addCriterion("tipcontent <=", value, "tipcontent");
            return (Criteria) this;
        }

        public Criteria andTipcontentLike(String value) {
            addCriterion("tipcontent like", value, "tipcontent");
            return (Criteria) this;
        }

        public Criteria andTipcontentNotLike(String value) {
            addCriterion("tipcontent not like", value, "tipcontent");
            return (Criteria) this;
        }

        public Criteria andTipcontentIn(List<String> values) {
            addCriterion("tipcontent in", values, "tipcontent");
            return (Criteria) this;
        }

        public Criteria andTipcontentNotIn(List<String> values) {
            addCriterion("tipcontent not in", values, "tipcontent");
            return (Criteria) this;
        }

        public Criteria andTipcontentBetween(String value1, String value2) {
            addCriterion("tipcontent between", value1, value2, "tipcontent");
            return (Criteria) this;
        }

        public Criteria andTipcontentNotBetween(String value1, String value2) {
            addCriterion("tipcontent not between", value1, value2, "tipcontent");
            return (Criteria) this;
        }

        public Criteria andTiptimeIsNull() {
            addCriterion("tiptime is null");
            return (Criteria) this;
        }

        public Criteria andTiptimeIsNotNull() {
            addCriterion("tiptime is not null");
            return (Criteria) this;
        }

        public Criteria andTiptimeEqualTo(Date value) {
            addCriterionForJDBCDate("tiptime =", value, "tiptime");
            return (Criteria) this;
        }

        public Criteria andTiptimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("tiptime <>", value, "tiptime");
            return (Criteria) this;
        }

        public Criteria andTiptimeGreaterThan(Date value) {
            addCriterionForJDBCDate("tiptime >", value, "tiptime");
            return (Criteria) this;
        }

        public Criteria andTiptimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("tiptime >=", value, "tiptime");
            return (Criteria) this;
        }

        public Criteria andTiptimeLessThan(Date value) {
            addCriterionForJDBCDate("tiptime <", value, "tiptime");
            return (Criteria) this;
        }

        public Criteria andTiptimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("tiptime <=", value, "tiptime");
            return (Criteria) this;
        }

        public Criteria andTiptimeIn(List<Date> values) {
            addCriterionForJDBCDate("tiptime in", values, "tiptime");
            return (Criteria) this;
        }

        public Criteria andTiptimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("tiptime not in", values, "tiptime");
            return (Criteria) this;
        }

        public Criteria andTiptimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("tiptime between", value1, value2, "tiptime");
            return (Criteria) this;
        }

        public Criteria andTiptimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("tiptime not between", value1, value2, "tiptime");
            return (Criteria) this;
        }

        public Criteria andTipclickIsNull() {
            addCriterion("tipclick is null");
            return (Criteria) this;
        }

        public Criteria andTipclickIsNotNull() {
            addCriterion("tipclick is not null");
            return (Criteria) this;
        }

        public Criteria andTipclickEqualTo(Integer value) {
            addCriterion("tipclick =", value, "tipclick");
            return (Criteria) this;
        }

        public Criteria andTipclickNotEqualTo(Integer value) {
            addCriterion("tipclick <>", value, "tipclick");
            return (Criteria) this;
        }

        public Criteria andTipclickGreaterThan(Integer value) {
            addCriterion("tipclick >", value, "tipclick");
            return (Criteria) this;
        }

        public Criteria andTipclickGreaterThanOrEqualTo(Integer value) {
            addCriterion("tipclick >=", value, "tipclick");
            return (Criteria) this;
        }

        public Criteria andTipclickLessThan(Integer value) {
            addCriterion("tipclick <", value, "tipclick");
            return (Criteria) this;
        }

        public Criteria andTipclickLessThanOrEqualTo(Integer value) {
            addCriterion("tipclick <=", value, "tipclick");
            return (Criteria) this;
        }

        public Criteria andTipclickIn(List<Integer> values) {
            addCriterion("tipclick in", values, "tipclick");
            return (Criteria) this;
        }

        public Criteria andTipclickNotIn(List<Integer> values) {
            addCriterion("tipclick not in", values, "tipclick");
            return (Criteria) this;
        }

        public Criteria andTipclickBetween(Integer value1, Integer value2) {
            addCriterion("tipclick between", value1, value2, "tipclick");
            return (Criteria) this;
        }

        public Criteria andTipclickNotBetween(Integer value1, Integer value2) {
            addCriterion("tipclick not between", value1, value2, "tipclick");
            return (Criteria) this;
        }

        public Criteria andTipimageIsNull() {
            addCriterion("tipimage is null");
            return (Criteria) this;
        }

        public Criteria andTipimageIsNotNull() {
            addCriterion("tipimage is not null");
            return (Criteria) this;
        }

        public Criteria andTipimageEqualTo(String value) {
            addCriterion("tipimage =", value, "tipimage");
            return (Criteria) this;
        }

        public Criteria andTipimageNotEqualTo(String value) {
            addCriterion("tipimage <>", value, "tipimage");
            return (Criteria) this;
        }

        public Criteria andTipimageGreaterThan(String value) {
            addCriterion("tipimage >", value, "tipimage");
            return (Criteria) this;
        }

        public Criteria andTipimageGreaterThanOrEqualTo(String value) {
            addCriterion("tipimage >=", value, "tipimage");
            return (Criteria) this;
        }

        public Criteria andTipimageLessThan(String value) {
            addCriterion("tipimage <", value, "tipimage");
            return (Criteria) this;
        }

        public Criteria andTipimageLessThanOrEqualTo(String value) {
            addCriterion("tipimage <=", value, "tipimage");
            return (Criteria) this;
        }

        public Criteria andTipimageLike(String value) {
            addCriterion("tipimage like", value, "tipimage");
            return (Criteria) this;
        }

        public Criteria andTipimageNotLike(String value) {
            addCriterion("tipimage not like", value, "tipimage");
            return (Criteria) this;
        }

        public Criteria andTipimageIn(List<String> values) {
            addCriterion("tipimage in", values, "tipimage");
            return (Criteria) this;
        }

        public Criteria andTipimageNotIn(List<String> values) {
            addCriterion("tipimage not in", values, "tipimage");
            return (Criteria) this;
        }

        public Criteria andTipimageBetween(String value1, String value2) {
            addCriterion("tipimage between", value1, value2, "tipimage");
            return (Criteria) this;
        }

        public Criteria andTipimageNotBetween(String value1, String value2) {
            addCriterion("tipimage not between", value1, value2, "tipimage");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tip
     *
     * @mbg.generated do_not_delete_during_merge Tue Sep 22 16:10:00 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tip
     *
     * @mbg.generated Tue Sep 22 16:10:00 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}